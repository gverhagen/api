FORMAT: 1A
HOST: https://api.teamleader.eu/api

# Teamleader API v2

This is the Teamleader API v2 documentation.

## General [/]

### /getUsers.php [GET /getUsers.php]

Get a list of all users

+ Response 200 (application/json)

        [
            {
                "id":1,
                "name":"John Smith",
                "email":"john@teamleader.eu",
                "gsm":"+32412654321",
                "telephone":"+3291239843",
                "team_id":1,
                "title":"Sales",
                "active":1
            },
            {
                "id":2,
                "name":"Jane Doe",
                "email":"jane@teamleader.eu",
                "gsm":"+32412654322",
                "telephone":"3291239844",
                "team_id":1,
                "title":"Designer",
                "active":1
            }
        ]

### /getDepartments.php [GET /getDepartments.php]

Get a list of all departments

+ Response 200 (application/json)

        [
            {
                "id":1,
                "name":"Sales"
            },
            {
                "id":2,
                "name":"Customer Support"
            }
        ]


### getTags.php [GET /getTags.php]

Get a list of all tags

+ Response 200 (application/json)

        {
            "1": "A Tag",
            "2": "Another Tag",
            "3": "Tagtastic"
        }

### /getSegments.php [POST /getSegments.php]

Get a list of all segments

+ Request (application/json)

    + Attributes (object)
        + `object_type`: `crm_companies` (enum[string], required)

            Pick one of the possible values.

            + Members
                + crm_companies
                + crm_contacts
                + crm_todos
                + crm_callbacks
                + crm_meetings
                + inv_invoices
                + inv_creditnotes
                + pro_projects
                + sale_sales
                + ticket_tickets

+ Response 200 (application/json)

        {
            "Medewerkers": [
                {
                    "id": "owner--1",
                    "name": "",
                    "num_matches": -1
                },
                {
                    "id": "owner-1",
                    "name": "John Smith",
                    "num_matches": -1
                }
            ],
            "Smart segments": []
        }

## Contacts [/contacts]

### /getContacts.php [GET /getContacts.php{?amount,pageno}]

Get a paginated list of contacts

+ Parameters

    + amount: `20` (number, required) - Amount of contacts you want returned, 1 to 100.
    + pageno: `0` (number, required) - The numerated page you want, starts at 0.

+ Response 200 (application/json)

    + Attributes (array[Contact])

### /getContact.php [POST /getContact.php]

Get a paginated list of contacts

+ Request (application/json)

    + Attributes (object)
        + `contact_id`: `1` (number, required)

+ Response 200 (application/json)

    + Attributes (Contact)

### /getContactsByCompany.php [POST /getContactsByCompany.php]

Get a paginated list of contacts

+ Request (application/json)

    + Attributes (object)
        + `company_id`: `1` (number, required)

+ Response 200 (application/json)

    + Attributes (array[Contact])

### /addContact.php [POST /addContact.php]

Add a contact to Teamleader

+ Request (application/json)

    + Attributes (object)
        + forename: `John` (string, required) - The given name of the new contact
        + surname: `Smith` (string, required) - The surname of the new contact
        + email: `john@example.com` (string, required) - The email address of the new contact
        + salutation: `Mr` (string, optional)
        + telephone: `1234567` (string, optional)
        + gsm: `7654321` (string, optional)
        + website: `http://example.com` (string, optional)
        + country: `BE` (string, optional) - Country code according to ISO 3166-1 alpha-2. For Belgium: "BE"
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + address_name_delivery: `Delivery` (string, optional)
        + zipcode_delivery: `90202` (string, optional)
        + city_delivery: `Citytown` (string, optional)
        + street_delivery: `Central Sq` (string, optional)
        + number_delivery: `1` (string, optional)
        + address_name_visiting: `Visiting` (string, optional)
        + zipcode_visiting: `90203` (string, optional)
        + city_visiting: `VilleCity` (string, optional)
        + street_visiting: `Central Str` (string, optional)
        + number_visiting: `1` (string, optional)
        + address_name_invoicing: `Invoicing` (string, optional)
        + zipcode_invoicing: `90204` (string, optional)
        + city_invoicing: `TownCity` (string, optional)
        + street_invoicing: `Central Rd` (string, optional)
        + number_invoicing: `1` (string, optional)
        + invoice_email_address: `invoicing@example.com` (string, optional)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + gender: `M` (enum[string], optional)
            + Members
                + M
                + F
                + U
        + dob: `1454604273` (number, optional) - Unix timestamp
        + description: `Met at expo` (string, optional) - Background information on the contact
        + newsletter: `true` (boolean, optional)
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + automerge_by_name: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same forename and surname, if it finds any.
            + Default: `false`
        + automerge_by_email: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same email address, if it finds any.
            + Default: `false`
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)
        + tracking string: `foo` (string, optional) - Title of the activity
        + tracking_long: `foobar` (string, optional) - Description of the activity

+ Response 201 (application/json)

        {
            "id": 1163240
        }

### /updateContact.php [POST /updateContact.php]

Update a Teamleader contact

+ Request (application/json)

    + Attributes (object)
        + contact_id: `1` (number, required) - The ID of the contact you want to update
        + track_changes: `1` (number, required) - If set to 1, all changes are logged and visible to users in the web-interface
        + forename: `John` (string) - The given name of the new contact
        + surname: `Smith` (string) - The surname of the new contact
        + email: `john@example.com` (string, required) - The email address of the new contact
        + telephone: `1234567` (string, optional)
        + gsm: `7654321` (string, optional)
        + fax: `7654321` (string, optional)
        + website: `http://example.com` (string, optional)
        + country: `BE` (string, optional) - Country code according to ISO 3166-1 alpha-2. For Belgium: "BE"
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + gender: `M` (enum[string], optional)
            + Members
                + M
                + F
                + U
        + dob: `1454604273` (number, optional) - Unix timestamp
        + description: `Met at expo` (string, optional) - Background information on the contact
        + linked_company_ids: `1,2` (string, optional) - Comma-separated list of company IDs that should be linked to this contact. (overwrites existing links)
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + remove_tag_by_string: `upsell` (string, optional) - Pass one or more tags, comma-separated. These tags will be removed from the contact.
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

+ Response 200 (application/json)

        {
            "status":"OK"
        }

### /deleteContact.php [POST /deleteContact.php]

Delete a contact from Teamleader

+ Request (application/json)

    + Attributes (object)
        + contact_ID: `1` (number, required) - The account ID of the contact you wish to delete

+ Response 200 (application/json)

        {
            "status": "success"
        }

### /linkContactToCompany.php [POST /linkContactToCompany.php]

Linking a contact to a company

+ Request (application/json)

    + Attributes (object)
        + contact_id: `123` (number, required) - The ID of a contact
        + company_id: `5` (number, required) - The ID of a company
        + mode: `link` (enum[string], required) - Wether you want to link or unlink a contact.
            + Members
                + link
                + unlink

+ Response 200 (application/json)

        {
            "status": "success"
        }

## Companies [/companies]

### /getCompanies.php [POST /getCompanies.php]

Search companies

+ Request (application/json)

    + Attributes (object)
        + amount: `20` (number, required) - The amount of contacts returned per request, max 1 to 100
        + pageno: `0` (number, required) - The current page, the first page is 0
        + searchby: `teamleader` (string, optional) - A search string. Teamleader will try to match each part of the string to the forename, surname, company name and email address.
        + modifiedsince: `1454604273` (number, optional) - Unix timestamp. Teamleader will only return contacts that have been added or modified since that timestamp.
        + filter_by_tag: `upsell` (string, optional) - Company tag. Teamleader will only return companies that have the tag.
        + segment_id: `4` (number, optional) - The ID of a segment created for contacts. Teamleader will only return contacts that have been filtered out by the segment settings.
        + selected_customfields: `` (string, optional) - Comma-separated list of the IDs of the custom fields you wish to select (max 10).

+ Response 200 (application/json)

    + Attributes (array[Company])

### /getCompany.php [POST /getCompany.php]

Get company info

+ Request (application/json)

    + Attributes (object)
        + company_id: 123 (number)

+ Response 200 (application/json)

    + Attributes (Company)

### /addCompany.php [POST /addCompany.php]

Add a Teamleader company

+ Request (application/json)

    + Attributes (object)
        + name: `1` (string, required)
        + email: `john@example.com` (string, required) - The email address of the new contact
        + vat_code: `Mr` (string, optional)
        + telephone: `1234567` (string, optional)
        + country: `7654321` (string, optional)
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + address_name_delivery: `Delivery` (string, optional)
        + zipcode_delivery: `90202` (string, optional)
        + city_delivery: `Citytown` (string, optional)
        + street_delivery: `Central Sq` (string, optional)
        + number_delivery: `1` (string, optional)
        + address_name_visiting: `Visiting` (string, optional)
        + zipcode_visiting: `90203` (string, optional)
        + city_visiting: `VilleCity` (string, optional)
        + street_visiting: `Central Str` (string, optional)
        + number_visiting: `1` (string, optional)
        + address_name_invoicing: `Invoicing` (string, optional)
        + zipcode_invoicing: `90204` (string, optional)
        + city_invoicing: `TownCity` (string, optional)
        + street_invoicing: `Central Rd` (string, optional)
        + number_invoicing: `1` (string, optional)
        + invoice_email_address: `invoicing@example.com` (string, optional)
        + website: `http://example.com` (string, optional)
        + description: `Met at expo` (string, optional) - Background information on the contact
        + account_manager_id: `1` (number, optional)
        + local_business_number: `BE0123.123.123` (string, optional) - the local business number (KVK in the Netherlands)
        + business_type: `NV` (string, optional) - containing the company type (eg NV, BVBA,..)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + automerge_by_name: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same forename and surname, if it finds any.
            + Default: `false`
        + automerge_by_email: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same email address, if it finds any.
            + Default: `false`
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

+ Response 201 (application/json)

        {
            "id":"1"
        }

### /updateCompany.php [POST /updateCompany.php]

Update a Teamleader company

+ Request (application/json)

    + Attributes (object)
        + company_id: `1` (number, required) - The ID of the contact you want to update
        + track_changes: `1` (number, required) - If set to 1, all changes are logged and visible to users in the web-interface
        + name: `1` (string, required)
        + email: `john@example.com` (string, required) - The email address of the new contact
        + vat_code: `Mr` (string, optional)
        + telephone: `1234567` (string, optional)
        + fax: `7654321` (string, optional)
        + country: `7654321` (string, optional)
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + invoice_email_address: `invoicing@example.com` (string, optional)
        + website: `http://example.com` (string, optional)
        + description: `Met at expo` (string, optional) - Background information on the contact
        + account_manager_id: `1` (number, optional)
        + local_business_number: `BE0123.123.123` (string, optional) - the local business number (KVK in the Netherlands)
        + business_type: `NV` (string, optional) - containing the company type (eg NV, BVBA,..)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + remove_tag_by_string: `upsell` (string, optional) - Pass one or more tags, comma-separated. These tags will be removed from the contact.
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

+ Response 200 (application/json)

        {
            "status":"OK"
        }

### /deleteCompany.php [POST /deleteCompany.php]

Delete a company from Teamleader

+ Request (application/json)

    + Attributes (object)
        + company_id: `1` (number, required) - The account ID of the company you wish to delete

+ Response 200 (application/json)

        {
            "status": "success"
        }

### /getBusinessTypes.php [POST /getBusinessTypes.php]

Get the names of business types (legal structures) a company can have within a certain country.

+ Request (application/json)

    + Attributes (object)
        + country: BE (string) -  country code according to ISO 3166-1 alpha-2. For Belgium: "BE"

+ Response 200 (application/json)

        [
            {
                "name": "AG"
            },
            {
                "name": "BVBA"
            }
        ]

## Deals [/deals]

### /addDeal.php [POST /addDeal.php]

Add a deal for a contact or company.

+ Request (application/json)

    + Attributes (object)
        + contact_or_company: `company` (enum[string], required) - Who is related to this deal?
            + Members
                + company
                + contact
        + contact_or_company_id: `1` (number, required) - ID of the related contact or company
        + title: `Interesting business deal` (string, required)
        + source: `Google Adwords` (string, required)
        + description_1: `Search module` (string, required)
        + price_1: `5` (number, required)
        + amount_1: `1` (number, required)
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Enable search` (string, optional)
        + custom_field_ID: `1` (number, optional) - replace ID by the ID of your custom field.
        + sys_department_id: `1` (number, optional) - ID of the department the deal will be added to
        + responsible_sys_client_id: `1` (number, optional) - ID of the user that is responsible for this deal
        + phase_id: `1` (number, optional) - new phase ID this deal should be moved to
        + description: `1` (string, optional) - If this parameter is filled out a quotation (PDF) is generated by Teamleader using the text provided and the items. The PDF is accessible via the web interface.
        + budget_estimation: `10` (number, optional) - budget estimation for this deal. This value will be overwritten once a quotation is made for this deal
        + optional_contact_id: `1` (number, optional) - if this deal is related to a company, you can specify the ID of a related contact within that company via this parameter
        + filter_double_sales: `0` (number, optional) - if set to 1, an extra check added to make sure the deal isn't a double of the previous one.'

+ Response 201 (application/json)

        {
            "id": 165655
        }

### /updateDeal.php [POST /updateDeal.php]

Update a deal

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - Who is related to this deal?
        + description_1: `Search module` (string, required)
        + price_1: `5` (number, required)
        + amount_1: `1` (number, required)
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Enable search` (string, optional)

+ Response 200 (application/json)

        {
            "status": "OK"
        }

### /updateDealItems.php [POST /updateDealItems.php]

Update a deal's items

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - Who is related to this deal?
        + title: `Interesting business deal` (string, optional)
        + source: `Google Adwords` (string, optional)
        + responsible_sys_client_id: `1` (number, optional) - ID of the user that is responsible for this deal
        + phase_id: `1` (number, optional) - new phase ID this deal should be moved to
        + budget_estimation: `10` (number, optional) - budget estimation for this deal. This value will be overwritten once a quotation is made for this deal
        + custom_field_ID: `1` (number, optional) - replace ID by the ID of your custom field.

+ Response 200 (application/json)

        {
            "status": "OK"
        }

### /sendSaleToClient.php [POST /sendSaleToClient.php]

Send a deal via email to client

+ Request (application/json)

    + Attributes (object)
        + sale_id: `1` (number, required) - ID of the deal
        + email: `john@example.com` (string, required) - Email of the client
        + subject: `1` (number, required) - Subject of the email
        + message: `1` (number, required) -  Add <link> to the message to print out the InvoiceCloud link. (not required when using an email template, leave empty or discard from request when using template_id)
        + template_id: `1` (number, optional) - ID of the email message created in Teamleader.

+ Response 200 (application/json)

        {
            "status": "OK"
        }

### /getDeals.php [GET /getDeals.php]

Get a list of all deals

+ Request (application/json)

    + Attributes (object)
        + amount: `10` (number, required) - Amount of results you want
        + pageno: `0` (number, required) - Page of results you want
        + searchby: `Teamleader` (string, optional) - A search string. Teamleader will try to search deals matching this string.
        + selected_customfields: `42,142` (string, optional) - Comma-separated list of the IDs of the custom fields you wish to select (max 10).
        + filter_by_phase_id: `5` (string, optional) - Only return deals with this phase ID
        + segment_id: `1` (string, optional) - The ID of a segment created for deals.

+ Response 200 (application/json)

    + Attributes (array[Deal])

### /getDealsByContactOrCompany.php [POST /getDealsByContactOrCompany.php]

Get a list of all deals by contact or company

+ Request (application/json)

    + Attributes (object)
        + contact_or_company: `company` (enum[string], required) - Who is related to this deal?
            + Members
                + company
                + contact
        + contact_or_company_id: `1` (number, required) - ID of the related contact or company

+ Response 200 (application/json)

        [
            {
                "deal_id": 1,
                "phase_id": 5
            }
        ]

### /getDealsByProject.php [POST /getDealsByProject.php]

Get a list of all deals by project

+ Request (application/json)

    + Attributes (object)
        + project_id: `1` (number, required) - ID of the project

+ Response 200 (application/json)

        [
            {
                "deal_id": 1
            }
        ]

### /getDeal.php [POST /getDeal.php]

Get deal details

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - ID of the deal you want

+ Response 200 (application/json)

    + Attributes (Deal)

### /getDealPhaseChanges.php [POST /getDealPhaseChanges.php]

Get a list of a deal phase changes

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - ID of the deal you want

+ Response 200 (application/json)

        [
            {
                "old_phase_id": "",
                "new_phase_id": 5,
                "change_date": 1492074106,
                "change_date_formatted": "13/04/2017",
                "related_user_id": ""
            }
        ]

### /getDealPhases.php [GET /getDealPhases.php]

Get a list of all phases a deal can go through

+ Response 200 (application/json)

        [
            {
                "id": "1",
                "name": "New"
            },
            {
                "id": "2",
                "name": "Contacted"
            }
        ]

### /getDealSources.php [GET /getDealSources.php]

Get a list of all deal sources

+ Response 200 (application/json)

        [
            {
                "id": "1",
                "name": "Google Search"
            },
            {
                "id": "2",
                "name": "Exposition"
            }
        ]

## Invoices [/invoices]

### /getInvoices.php [POST /getInvoices.php]

Search invoices

+ Request (application/json)

    + Attributes (object)
        + date_from: `01/01/2017` (string, required) - Format: dd/mm/yyyy
        + date_to: `31/12/2017` (string, required) - Format: dd/mm/yyyy
        + contact_or_company: `contact` (enum[string], optional) - Use this to filter by client
            + Members
                + contact
                + company
        + contact_or_company_id: `1` (number, optional) - ID of the contact or company
        + deep_search: `1` (number, optional) Pass 1 to return not just invoices related to the requested contact, but also to invoices related to linked companies
        + selected_customfields: `1,2` (string, optional) - comma-separated list of the IDs of the custom fields you wish to select (max 10).

+ Response 200 (application/json)

    + Attributes (array[Invoice])

### /getCreditnotes.php [POST /getCreditnotes.php]

Search creditnotes

+ Request (application/json)

    + Attributes (object)
        + `date_from`: `01/01/2017` (string, required) - Format: dd/mm/yyyy
        + `date_to`: `31/12/2017` (string, required) - Format: dd/mm/yyyy
        + contact_or_company: `contact` (enum[string], optional) - Use this to filter by client
            + Members
                + contact
                + company
        + contact_or_company_id: `1` (number, optional) - ID of the contact or company
        + deep_search: `1` (number, optional) Pass 1 to return not just invoices related to the requested contact, but also to invoices related to linked companies

+ Response 200 (application/json)

    + Attributes (array[Creditnote])

### /getInvoicesByProject.php [POST /getInvoicesByProject.php]

Search invoices

+ Request (application/json)

    + Attributes (object)
        + project_id: `1` (number, required)
        + include_draft_invoices: `1` (number, optional) -  set this parameter to 1 to include draft invoices
            + Default: `0`

+ Response 200 (application/json)

    + Attributes (array[Invoice])

### /getCreditnotesByProject.php [POST /getCreditnotesByProject.php]

Search creditnotes

+ Request (application/json)

    + Attributes (object)
        + project_id: `1` (number, required)
        + include_draft_invoices: `1` (number, optional) -  set this parameter to 1 to include draft invoices
            + Default: `0`

+ Response 200 (application/json)

    + Attributes (array[Creditnote])

## Files [/files]

### /getFiles.php [GET /getFiles.php]

Get a list of all files relating to an object

+ Request (application/json)

    + Attributes (object)
        + amount: `20` (number, required) - The amount of contacts returned per request, max 1 to 100
        + pageno: `0` (number, required) - The current page, the first page is 0
        + object_type: `contact` (enum[string], required) - The type of object
            + Members
                + contact
                + company
                + sale
                + ticket
                + project
                + meeting
        + object_id: `1` (number, required) - ID of the object
        + folder_name: `cat_pictures` (string, optional) - the folder name of which the contents should be displayed

+ Response 200 (application/json)

        {
            "status": "success",
            "reason": "",
            "data": [
                {
                    "id": 101942,
                    "filename": "avatar.jpg",
                    "date_last_edited": 1492673227,
                    "filesize_bytes": 58493
                }
            ]
        }

### /getFileInfo.php [GET /getFileInfo.php]

Get a info about a specific file

+ Request (application/json)

    + Attributes (object)
        + file_id: `20` (number, required) - The file's ID

+ Response 200 (application/json)

        {
            "filename": "avatar.jpg",
            "filesize_bytes": 58493,
            "uploader_client_id": 40,
            "related_object_type": "contact",
            "related_object_id": 1178028,
            "folder": "Business cards",
            "date_last_edited": 1492673227,
            "date_last_edited_formatted": "20/04/2017"
        }

### /downloadFile.php [GET /downloadFile.php]

Get a signed URL where the file can be downloaded. The signed URL will remaing valid for 30 seconds.

+ Request (application/json)

    + Attributes (object)
        + file_id: `20` (number, required) - The file's ID

+ Response 200 (application/json)

        {
            "status": "success",
            "reason": "",
            "data": {
                "signed_download_url": "https://test-teamleader.s3-eu-west-1.amazonaws.com/TL_uploaded_files/5/contact/1178028/101942_40_1492673227_NX3FH?response-cache-control=maxage%3D1&response-content-disposition=attachment%3B%20%20filename%2A%3DUTF-8%27%27avatar.jpg&AWSAccessKeyId=AKIAJW7R5Z6B2I3N4RPA&Expires=1492677109&Signature=K5aSuyWOIZ26sVeGx%2BizY1MOUTo%3D"
            }
        }

### /uploadFile.php [GET /uploadFile.php]

Get a signed URL where the file can be downloaded. The signed URL will remaing valid for 30 seconds.

+ Request (application/json)

    + Attributes (object)
        + object_type: `contact` (enum[string], required) - The type of object
            + Members
                + contact
                + company
                + sale
                + ticket
                + project
                + meeting
        + object_id: `1` (number, required) - ID of the object
        + file_content: `TG9yZW0gSXBzdW0gaXMgc2ltcGx5IGR1bW15IHRleHQgb2YgdGhlIHByaW50aW5nIGFuZCB0eXBlc2V0dGluZyBpbmR1c3RyeS4=` (string, required) - Base64 encoded version the file
        + file_name: `cat.bmp` (string, required) - Name of the file, including extension
        + folder_name: `cat_pictures` (string, optional) - the folder name of which the contents should be displayed

+ Response 200 (application/json)

        {
            "status": "success",
            "reason": "",
            "data": "123"
        }

### /deleteFile.php [GET /deleteFile.php]

Delete a file

+ Request (application/json)

    + Attributes (object)
        + file_id: `20` (number, required) - The file's ID

+ Response 200 (application/json)

        {
            "status": "success"
        }

## Products [/products]

### /addProduct.php [POST /addProduct.php]

Add product

+ Request (application/x-www-form-urlencoded)

    + Attributes (object)
        + name: `Johan` (string, required) - The name of the product
        + price: `12.34` (string, required) - The price of the new product
        + stock_amount: `100` (number, optional) - The new value for stock
        + external_id: `1234A` (string, optional) - External ID code
        + vat: `00` (enum[string]), optional) - The VAT tariff for the new product
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + account_id: `1234` (number, optional) - The ID of the bookkeeping account
        + automerge_by_name: `true` (boolean, optional) - If this flag is set to 1, Teamleader will merge this info into an existing product with the same name, if it finds any.
            + Default: false
        + purchase_price: `12.34` (number, optional) - The purchase price of the product
        + custom_field_ID: `any` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

    + Body

            name=Johan&price=12.34&external_id=1234A&vat=00&account_id=1234&automerge_by_name=1&purchase_price=12.34&custom_field_310=test



+ Response 200 (text/html)
    + Attributes (object)
        + id: `416654` (number) - ID of the product that was added

    + Body

            416654

### /updateProduct.php [POST /updateProduct.php]

Update product

+ Request (application/x-www-form-urlencoded)

    + Attributes (object)
        + product_id: `1234` (string, required) - Id of the product
        + name: `Johan` (string, optional) - The name of the product
        + price: `12.34` (string, optional) - The price of the new product
        + external_id: `1234A` (string, optional) - External ID code
        + stock_amount: `100` (number, optional) - The new value for stock
        + purchase_price: `12.34` (number, optional) - The purchase price of the product
        + custom_field_ID: `any` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

    + Body

            product_id=1234&name=Johan&price=12.34&external_id=1234A&stock_amount=100&purchase_price=12.34&custom_field_310=test



+ Response 200 (application/json)
    + Attributes (object)
        + status: `success` (string) - Indicating success or failure of the update operation.


### /deleteProduct.php [POST /deleteProduct.php]

Delete product

+ Request (application/x-www-form-urlencoded)

    + Attributes (object)
        + product_id: `1234` (string, required) - Id of the product

    + Body

            product_id=1234

+ Response 200 (application/json)
    + Attributes (object)
        + status: `success` (string) - Indicating success or failure of the update operation.

### /getProducts.php [POST /getProducts.php]

Search all products

+ Request (application/json)

+ Response 200 (application/json)


### /getProduct.php [POST /getProduct.php]

Get product details

+ Request (application/x-www-form-urlencoded )

    + Attributes
        + product_id: 20 (number, required) - The id of the product
        + include_all_custom_fields: 1 (number, optional) - If this flag is set to 1, all custom fields will be fetched 
        + include_photos: 1 (number, optional) - If this flag is set to 1, the product image url will be fetched

+ Response 200 (text/html)

    + Attributes (Product)
    
    + Body
            
            {
                "id": 202188,
                "name": "Nice product",
                "external_id": "23",
                "vat": "19",
                "inv_account_id": 1097,
                "description": "A nice product description",
                "stock": 30,
                "min_stock": 10,
                "date_edited": 1472645009,
                "prices": [
                    {
                        "name": "Price Foo",
                        "price_excl_vat": "20.0000",
                        "price_incl_vat": 23.8
                    },
                    {
                        "name": "Price BAR",
                        "price_excl_vat": "30.0000",
                        "price_incl_vat": 35.7
                    },
                ],
                "custom_fields": {
                    "1": "Custom field 1",
                    "2": 245,
                },
                "suppliers": [
                    {
                        "type":"company",
                        "id":484866,
                        "name":"Products and Services Inc.",
                        "purchase_price":"10.0000",
                        "is_main_supplier":1,
                        "supplier_product_code":"PRODUCT_CODE1"
                    }
                ]
            }

# Data Structures

## Contact (object)

+ id: 456 (number)
+ forename: Erlich (string)
+ surname: Bachman (string)
+ street: Newell Road (string)
+ number: 5230 (string)
+ zipcode: 94020 (string)
+ city: Palo Alto (string)
+ country: US (string)
+ website: https://piedpiper.com (string)
+ email: info@piedpiper.eu (string)
+ gsm (string)
+ telephone: 09 298 06 15 (string)
+ fax (string)
+ gender: M (enum[string])
    + Members
        + M
        + F
        + U
+ birthdate: 1491480887 (number)
+ iban (string)
+ bic (string)
+ tags: [tag1,tag2] (array[string])
+ language_code: EN (string)
+ date_added: 1491480887 (number)
+ extra_addresses (array[string])
+ deleted: 0 (number)
+ custom_fields (object)
+ linked_company_ids (string)
+ linked_company_names (array[string])
+ linked_company_functions (string)
+ background_info_html (string)
+ external_customer_id (string)

## Company (object)

+ id: 123 (number)
+ name: Pied Piper (string)
+ street: Newell Road (string)
+ number: 5230 (string)
+ zipcode: 94020 (string)
+ city: Palo Alto (string)
+ country: US (string)
+ taxcode: BE 0899.623.035 (string)
+ kvk_nummer (string)
+ local_business_number (string)
+ email: info@piedpiper.eu (string)
+ website: https://piedpiper.com (string)
+ telephone: 09 298 06 15 (string)
+ fax (string)
+ iban (string)
+ bic (string)
+ pricelist_id: 9 (number)
+ account_manager_id (number)
+ date_added: 1456388372 (number)
+ tags: [tag1,tag2] (array[string])
+ language_code: NL (string)
+ business_type: NV (string)
+ vat_liability: vat_liable (string)
+ sector_name (string)
+ invoice_email_address (string)
+ payment_term (string)
+ extra_addresses (array[string])
+ background_info_html (string)
+ related_companies (string)
+ deleted: 0 (number)
+ custom_fields (object)
+ external_customer_id (string)

## Invoice (object)
+ id: 173111 (number)
+ invoice_nr: 5 (number)
+ invoice_nr_detailed: `2017 / 5 (MAIN)` (string)
+ date: 1491343199 (number)
+ date_formatted: "04/04/2017" (string)
+ due_date: 1493157599 (number)
+ due_date_formatted: "25/04/2017" (string)
+ date_paid: `-1` (number)
+ paid: 0 (number)
+ total_price_excl_vat: "123.00" (string)
+ total_price_incl_vat: "130.38" (string)
+ name: "De Rode Duivles" (string)
+ for_attention_of: "Radja Nainggolan" (string)
+ incasso_recall_costs: "0.00" (string)
+ incasso_interest_amount: "0.00" (string)
+ structured_communication: "+++000/1731/11048+++" (string)
+ contact_or_company: "company" (string)
+ contact_or_company_id: 485906 (number)

## Creditnote (object)
+ id: 173111 (number)
+ creditnote_nr: 5 (number)
+ creditnote_nr_detailed: `2017 / 5 (MAIN)` (string)
+ date: 1491343199 (number)
+ date_formatted: "04/04/2017" (string)
+ date_paid: `-1` (number)
+ paid: 0 (number)
+ total_price_excl_vat: "123.00" (string)
+ total_price_incl_vat: "130.38" (string)
+ name: "De Rode Duivles" (string)
+ contact_or_company: "company" (string)
+ contact_or_company_id: 485906 (number)
+ related_invoice_id: 173111 (number)

## Deal (object)
+ id: 164938 (number)
+ title: `Interesting deal` (string)
+ for: contact (string)
+ for_id: 1176793 (number)
+ customer_name: `John`,
+ quotation_nr: 21 (number)
+ total_price_excl_vat: `0.00` (string)
+ probability: 5 (number)
+ phase_id: 5 (number)
+ responsible_user_id: `-1` (number)
+ entry_date: 1487250618 (number)
+ entry_date_formatted: 16/02/2017 (string)
+ latest_activity_date: 1487250618 (number)
+ latest_activity_date_formatted: 16/02/2017 (string)
+ close_date: 1487250618 (number)
+ close_date_formatted: 16/02/2017 (string)
+ date_lost: 1487250618 (number)
+ date_lost_formatted: 16/02/2017 (string)
+ reason_refused: `No interest` (string)
+ source_id: `8799` (number)

## Product (object)
+ id: 202188 (number)
+ name: Nice product (string)
+ external_id: 23 (string)
+ vat: 19 (string)
+ inv_account_id: 1097 (number)
+ description: A nice product description (string)
+ stock: 30 (number)
+ min_stock: 10 (number)
+ date_edited: 1472645009 (number)
+ prices (array)
    + (object)
        + name: Price Foo (string)
        + price_excl_vat: 20.000 (string)
        + price_incl_vat: 23.8 (number)
+ custom_fields (object)
+ suppliers (array) - A supplier
    + (object)
        + type: company (string)
        + id : 37625 (number)
        + name: Products and Services Inc. (string)
        + purchase_price: 10.0000 (string)
        + is_main_supplier: 1 (string)
        + supplier_product_code: PRODUCTCODE1 (string)
