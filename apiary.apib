FORMAT: 1A
HOST: https://api.teamleader.eu/api

# Teamleader API v2

This is the Teamleader API v2 documentation.

## General [/]

### /getUsers.php [GET /getUsers.php]

Get a list of all users

+ Response 200 (application/json)

        [
            {
                "id":1,
                "name":"John Smith",
                "email":"john@teamleader.eu",
                "gsm":"+32412654321",
                "telephone":"+3291239843",
                "team_id":1,
                "title":"Sales",
                "active":1
            },
            {
                "id":2,
                "name":"Jane Doe",
                "email":"jane@teamleader.eu",
                "gsm":"+32412654322",
                "telephone":"3291239844",
                "team_id":1,
                "title":"Designer",
                "active":1
            }
        ]

### /getDepartments.php [GET /getDepartments.php]

Get a list of all departments

+ Response 200 (application/json)

        [
            {
                "id":1,
                "name":"Sales"
            },
            {
                "id":2,
                "name":"Customer Support"
            }
        ]


### getTags.php [GET /getTags.php]

Get a list of all tags

+ Response 200 (application/json)

        {
            "1": "A Tag",
            "2": "Another Tag",
            "3": "Tagtastic"
        }

### /getSegments.php [POST /getSegments.php]

Get a list of all segments

+ Request (application/json)

    + Attributes (object)
        + `object_type`: `crm_companies` (enum[string], required)

            Pick one of the possible values.

            + Members
                + crm_companies
                + crm_contacts
                + crm_todos
                + crm_callbacks
                + crm_meetings
                + inv_invoices
                + inv_creditnotes
                + pro_projects
                + sale_sales
                + ticket_tickets

+ Response 200 (application/json)

        {
            "Medewerkers": [
                {
                    "id": "owner--1",
                    "name": "",
                    "num_matches": -1
                },
                {
                    "id": "owner-1",
                    "name": "John Smith",
                    "num_matches": -1
                }
            ],
            "Smart segments": []
        }

## Contacts [/contacts]

### /getContacts.php [GET /getContacts.php{?amount,pageno}]

Get a paginated list of contacts

+ Parameters

    + amount: `20` (number, required) - Amount of contacts you want returned, 1 to 100.
    + pageno: `0` (number, required) - The numerated page you want, starts at 0.

+ Response 200 (application/json)

    + Attributes (array[Contact])

### /getContact.php [POST /getContact.php]

Get a paginated list of contacts

+ Request (application/json)

    + Attributes (object)
        + `contact_id`: `1` (number, required)

+ Response 200 (application/json)

    + Attributes (Contact)

### /getContactsByCompany.php [POST /getContactsByCompany.php]

Get a paginated list of contacts

+ Request (application/json)

    + Attributes (object)
        + `company_id`: `1` (number, required)

+ Response 200 (application/json)

    + Attributes (array[Contact])

### /addContact.php [POST /addContact.php]

Add a contact to Teamleader

+ Request (application/json)

    + Attributes (object)
        + forename: `John` (string, required) - The given name of the new contact
        + surname: `Smith` (string, required) - The surname of the new contact
        + email: `john@example.com` (string, required) - The email address of the new contact
        + salutation: `Mr` (string, optional)
        + telephone: `1234567` (string, optional)
        + gsm: `7654321` (string, optional)
        + website: `http://example.com` (string, optional)
        + country: `BE` (string, optional) - Country code according to ISO 3166-1 alpha-2. For Belgium: "BE"
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + address_name_delivery: `Delivery` (string, optional)
        + zipcode_delivery: `90202` (string, optional)
        + city_delivery: `Citytown` (string, optional)
        + street_delivery: `Central Sq` (string, optional)
        + number_delivery: `1` (string, optional)
        + address_name_visiting: `Visiting` (string, optional)
        + zipcode_visiting: `90203` (string, optional)
        + city_visiting: `VilleCity` (string, optional)
        + street_visiting: `Central Str` (string, optional)
        + number_visiting: `1` (string, optional)
        + address_name_invoicing: `Invoicing` (string, optional)
        + zipcode_invoicing: `90204` (string, optional)
        + city_invoicing: `TownCity` (string, optional)
        + street_invoicing: `Central Rd` (string, optional)
        + number_invoicing: `1` (string, optional)
        + invoice_email_address: `invoicing@example.com` (string, optional)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + gender: `M` (enum[string], optional)
            + Members
                + M
                + F
                + U
        + dob: `1454604273` (number, optional) - Unix timestamp
        + description: `Met at expo` (string, optional) - Background information on the contact
        + newsletter: `true` (boolean, optional)
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + automerge_by_name: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same forename and surname, if it finds any.
            + Default: `false`
        + automerge_by_email: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing contact with the same email address, if it finds any.
            + Default: `false`
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)
        + tracking string: `foo` (string, optional) - Title of the activity
        + tracking_long: `foobar` (string, optional) - Description of the activity

+ Response 201 (application/json)

        {
            "id": 1163240
        }

### /updateContact.php [POST /updateContact.php]

Update a Teamleader contact

+ Request (application/json)

    + Attributes (object)
        + contact_id: `1` (number, required) - The ID of the contact you want to update
        + track_changes: `1` (number, required) - If set to 1, all changes are logged and visible to users in the web-interface
        + forename: `John` (string) - The given name of the new contact
        + surname: `Smith` (string) - The surname of the new contact
        + email: `john@example.com` (string, required) - The email address of the new contact
        + telephone: `1234567` (string, optional)
        + gsm: `7654321` (string, optional)
        + fax: `7654321` (string, optional)
        + website: `http://example.com` (string, optional)
        + country: `BE` (string, optional) - Country code according to ISO 3166-1 alpha-2. For Belgium: "BE"
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + gender: `M` (enum[string], optional)
            + Members
                + M
                + F
                + U
        + dob: `1454604273` (number, optional) - Unix timestamp
        + description: `Met at expo` (string, optional) - Background information on the contact
        + linked_company_ids: `1,2` (string, optional) - Comma-separated list of company IDs that should be linked to this contact. (overwrites existing links)
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + remove_tag_by_string: `upsell` (string, optional) - Pass one or more tags, comma-separated. These tags will be removed from the contact.
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

+ Response 200 (application/json)

        {
            "status":"OK"
        }

### /deleteContact.php [POST /deleteContact.php]

Delete a contact from Teamleader

+ Request (application/json)

    + Attributes (object)
        + contact_id: `1` (number, required) - The account ID of the contact you wish to delete

+ Response 200 (application/json)

        {
            "status": "success"
        }

### /linkContactToCompany.php [POST /linkContactToCompany.php]

Linking a contact to a company

+ Request (application/json)

    + Attributes (object)
        + contact_id: `123` (number, required) - The ID of a contact
        + company_id: `5` (number, required) - The ID of a company
        + mode: `link` (enum[string], required) - Wether you want to link or unlink a contact.
            + Members
                + link
                + unlink

+ Response 200 (application/json)

        {
            "status": "success"
        }

## Companies [/companies]

### /getCompanies.php [POST /getCompanies.php]

Search companies

+ Request (application/json)

    + Attributes (object)
        + amount: `20` (number, required) - The amount of companies returned per request, max 1 to 100
        + pageno: `0` (number, required) - The current page, the first page is 0
        + searchby: `teamleader` (string, optional) - A search string. Teamleader will try to match each part of the string to the company name and email address.
        + modifiedsince: `1454604273` (number, optional) - Unix timestamp. Teamleader will only return companies that have been added or modified since that timestamp.
        + filter_by_tag: `upsell` (string, optional) - Company tag. Teamleader will only return companies that have the tag.
        + segment_id: `4` (number, optional) - The ID of a segment created for companies. Teamleader will only return companies that have been filtered out by the segment settings.
        + selected_customfields: `` (string, optional) - Comma-separated list of the IDs of the custom fields you wish to select (max 10).

+ Response 200 (application/json)

    + Attributes (array[Company])

### /getCompany.php [POST /getCompany.php]

Get company info

+ Request (application/json)

    + Attributes (object)
        + company_id: 123 (number)

+ Response 200 (application/json)

    + Attributes (Company)

### /addCompany.php [POST /addCompany.php]

Add a Teamleader company

+ Request (application/json)

    + Attributes (object)
        + name: `Teamleader` (string, required)
        + email: `john@example.com` (string, optional) - The email address of the new company
        + vat_code: `BE0899.623.035` (string, optional)
        + telephone: `1234567` (string, optional)
        + country: `BE` (string, optional)
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + address_name_delivery: `Delivery` (string, optional)
        + zipcode_delivery: `90202` (string, optional)
        + city_delivery: `Citytown` (string, optional)
        + street_delivery: `Central Sq` (string, optional)
        + number_delivery: `1` (string, optional)
        + address_name_visiting: `Visiting` (string, optional)
        + zipcode_visiting: `90203` (string, optional)
        + city_visiting: `VilleCity` (string, optional)
        + street_visiting: `Central Str` (string, optional)
        + number_visiting: `1` (string, optional)
        + address_name_invoicing: `Invoicing` (string, optional)
        + zipcode_invoicing: `90204` (string, optional)
        + city_invoicing: `TownCity` (string, optional)
        + street_invoicing: `Central Rd` (string, optional)
        + number_invoicing: `1` (string, optional)
        + invoice_email_address: `invoicing@example.com` (string, optional)
        + website: `http://example.com` (string, optional)
        + description: `Met at expo` (string, optional) - Background information on the company
        + account_manager_id: `1` (number, optional)
        + local_business_number: `BE0123.123.123` (string, optional) - the local business number (KVK in the Netherlands)
        + business_type: `NV` (string, optional) - containing the company type (eg NV, BVBA,..)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + automerge_by_name: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing company with the same name, if it finds any.
            + Default: `false`
        + automerge_by_email: `true` (boolean, optional)
            If this flag is set to 1, Teamleader will merge this info into an existing company with the same email address, if it finds any.
            + Default: `false`
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

+ Response 201 (application/json)

        {
            "id":"1"
        }

### /updateCompany.php [POST /updateCompany.php]

Update a Teamleader company

+ Request (application/json)

    + Attributes (object)
        + company_id: `1` (number, required) - The ID of the company you want to update
        + track_changes: `1` (number, required) - If set to 1, all changes are logged and visible to users in the web-interface
        + name: `Teamleader` (string, optional)
        + email: `john@example.com` (string, optional) - The email address of the new company
        + vat_code: `BE0899.623.035` (string, optional)
        + telephone: `1234567` (string, optional)
        + fax: `7654321` (string, optional)
        + country: `BE` (string, optional)
        + zipcode: `90201` (string, optional)
        + city: `Cityville` (string, optional)
        + street: `Central Ave` (string, optional)
        + number: `1` (string, optional)
        + invoice_email_address: `invoicing@example.com` (string, optional)
        + website: `http://example.com` (string, optional)
        + description: `Met at expo` (string, optional) - Background information on the company
        + account_manager_id: `1` (number, optional)
        + local_business_number: `BE0123.123.123` (string, optional) - the local business number (KVK in the Netherlands)
        + business_type: `NV` (string, optional) - containing the company type (eg NV, BVBA,..)
        + language: `EN` (string, optional) - Language code according to ISO 639-1. For Dutch: "NL"
        + add_tag_by_string: `expo upsell` (string, optional) - Pass one or more tags, comma-separated. Existing tags will be reused, other tags will be automatically created for you.
        + remove_tag_by_string: `upsell` (string, optional) - Pass one or more tags, comma-separated. These tags will be removed from the company.
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

+ Response 200 (application/json)

        {
            "status":"OK"
        }

### /deleteCompany.php [POST /deleteCompany.php]

Delete a company from Teamleader

+ Request (application/json)

    + Attributes (object)
        + company_id: `1` (number, required) - The account ID of the company you wish to delete

+ Response 200 (application/json)

        {
            "status": "success"
        }

### /getBusinessTypes.php [POST /getBusinessTypes.php]

Get the names of business types (legal structures) a company can have within a certain country.

+ Request (application/json)

    + Attributes (object)
        + country: BE (string) -  country code according to ISO 3166-1 alpha-2. For Belgium: "BE"

+ Response 200 (application/json)

        [
            {
                "name": "AG"
            },
            {
                "name": "BVBA"
            }
        ]

## Deals [/deals]

### /addDeal.php [POST /addDeal.php]

Add a deal for a contact or company.

+ Request (application/json)

    + Attributes (object)
        + contact_or_company: `company` (enum[string], required) - Who is related to this deal?
            + Members
                + company
                + contact
        + contact_or_company_id: `1` (number, required) - ID of the related contact or company
        + title: `Interesting business deal` (string, required)
        + source: `Google Adwords` (string, required)
        + description_1: `Search module` (string, required)
        + price_1: `5` (number, required)
        + amount_1: `1` (number, required)
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Enable search` (string, optional)
        + custom_field_ID: `1` (number, optional) - replace ID by the ID of your custom field.
        + sys_department_id: `1` (number, optional) - ID of the department the deal will be added to
        + responsible_sys_client_id: `1` (number, optional) - ID of the user that is responsible for this deal
        + phase_id: `1` (number, optional) - new phase ID this deal should be moved to
        + description: `1` (string, optional) - If this parameter is filled out a quotation (PDF) is generated by Teamleader using the text provided and the items. The PDF is accessible via the web interface.
        + budget_estimation: `10` (number, optional) - budget estimation for this deal. This value will be overwritten once a quotation is made for this deal
        + optional_contact_id: `1` (number, optional) - if this deal is related to a company, you can specify the ID of a related contact within that company via this parameter
        + filter_double_sales: `0` (number, optional) - if set to 1, an extra check added to make sure the deal isn't a double of the previous one.'

+ Response 201 (application/json)

        {
            "id": 165655
        }

### /updateDeal.php [POST /updateDeal.php]

Update a deal

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - Who is related to this deal?
        + description_1: `Search module` (string, required)
        + price_1: `5` (number, required)
        + amount_1: `1` (number, required)
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Enable search` (string, optional)

+ Response 200 (application/json)

        {
            "status": "OK"
        }

### /updateDealItems.php [POST /updateDealItems.php]

Update a deal's items

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - Who is related to this deal?
        + title: `Interesting business deal` (string, optional)
        + source: `Google Adwords` (string, optional)
        + responsible_sys_client_id: `1` (number, optional) - ID of the user that is responsible for this deal
        + phase_id: `1` (number, optional) - new phase ID this deal should be moved to
        + budget_estimation: `10` (number, optional) - budget estimation for this deal. This value will be overwritten once a quotation is made for this deal
        + custom_field_ID: `1` (number, optional) - replace ID by the ID of your custom field.

+ Response 200 (application/json)

        {
            "status": "OK"
        }

### /sendSaleToClient.php [POST /sendSaleToClient.php]

Send a deal via email to client

+ Request (application/json)

    + Attributes (object)
        + sale_id: `1` (number, required) - ID of the deal
        + email: `john@example.com` (string, required) - Email of the client
        + subject: `1` (number, required) - Subject of the email
        + message: `1` (number, required) -  Add <link> to the message to print out the InvoiceCloud link. (not required when using an email template, leave empty or discard from request when using template_id)
        + template_id: `1` (number, optional) - ID of the email message created in Teamleader.

+ Response 200 (application/json)

        {
            "status": "OK"
        }

### /getDeals.php [GET /getDeals.php]

Get a list of all deals

+ Request (application/json)

    + Attributes (object)
        + amount: `10` (number, required) - Amount of results you want
        + pageno: `0` (number, required) - Page of results you want
        + searchby: `Teamleader` (string, optional) - A search string. Teamleader will try to search deals matching this string.
        + selected_customfields: `42,142` (string, optional) - Comma-separated list of the IDs of the custom fields you wish to select (max 10).
        + filter_by_phase_id: `5` (string, optional) - Only return deals with this phase ID
        + segment_id: `1` (string, optional) - The ID of a segment created for deals.

+ Response 200 (application/json)

    + Attributes (array[Deal])

### /getDealsByContactOrCompany.php [POST /getDealsByContactOrCompany.php]

Get a list of all deals by contact or company

+ Request (application/json)

    + Attributes (object)
        + contact_or_company: `company` (enum[string], required) - Who is related to this deal?
            + Members
                + company
                + contact
        + contact_or_company_id: `1` (number, required) - ID of the related contact or company

+ Response 200 (application/json)

        [
            {
                "deal_id": 1,
                "phase_id": 5
            }
        ]

### /getDealsByProject.php [POST /getDealsByProject.php]

Get a list of all deals by project

+ Request (application/json)

    + Attributes (object)
        + project_id: `1` (number, required) - ID of the project

+ Response 200 (application/json)

        [
            {
                "deal_id": 1
            }
        ]

### /getDeal.php [POST /getDeal.php]

Get deal details

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - ID of the deal you want

+ Response 200 (application/json)

    + Attributes (Deal)

### /getDealPhaseChanges.php [POST /getDealPhaseChanges.php]

Get a list of a deal phase changes

+ Request (application/json)

    + Attributes (object)
        + deal_id: `1` (number, required) - ID of the deal you want

+ Response 200 (application/json)

        [
            {
                "old_phase_id": "",
                "new_phase_id": 5,
                "change_date": 1492074106,
                "change_date_formatted": "13/04/2017",
                "related_user_id": ""
            }
        ]

### /getDealPhases.php [GET /getDealPhases.php]

Get a list of all phases a deal can go through

+ Response 200 (application/json)

        [
            {
                "id": "1",
                "name": "New"
            },
            {
                "id": "2",
                "name": "Contacted"
            }
        ]

### /getDealSources.php [GET /getDealSources.php]

Get a list of all deal sources

+ Response 200 (application/json)

        [
            {
                "id": "1",
                "name": "Google Search"
            },
            {
                "id": "2",
                "name": "Exposition"
            }
        ]

## Invoices [/invoices]

### /addInvoice.php [POST /addInvoice.php]

Adding an invoice

+ Request (application/json)

    + Attributes (object)
        + contact_or_company: `company` (enum[string], required) - Who is the invoice for?
            + Members
                + company
                + contact
        + contact_or_company_id: `1` (number, required) - ID of the related contact or company
        + sys_department_id: `2` (number, required) -  ID of the department the invoice will be added to
        + description_1: `An awesome product` (string, required) - At least one invoice line needs to be provided
        + price_1: `100` (number, required)
        + amount_1: `3` (number, required) 
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Subtitle` (string, optional)
        + custom_field_ID: `1` (number, optional) - replace ID by the ID of your custom field.
        + for_attention_of: `An awesome customer` (string, optional)
        + payment_term: `30D` (enum[string], optional) - 30D by default. 7D : 7 days, 30DEM : 30 days end of month.
            + Members
                + 0D
                + 7D
                + 10D
                + 15D
                + 21D
                + 30D
                + 45D
                + 60D
                + 30DEM
                + 60DEM
                + 90DEM
        + draft_invoice: `1` (enum[number], optional) - set to 1 to insert this invoice as a draft.(default: 0)
            + Members
                + 0
                + 1
        + layout_id: `1` (number, optional) - ID of the custom layout you wish to use for this invoice
        + date: `21/06/2017` (string, optional) - date (dd/mm/yyyy): the date of the invoice. (default: today)
        + po_number: `1` (string, optional) - The external order number
        + related_deal_id: `1` (number, optional) - ID of the deal this invoice is related to
        + direct_debit: `1` (enum[number], optional) - set to 1 to enable direct debit. (default: 0)
            + Members
                + 0
                + 1
        + comments: `An invoice with awesome products` (string, optional)
        + force_set_number: `20170001` (number, optional) - force invoice number to the given integer. Is only taken into account when there's no date provided
        + force_set_date: `21/06/2017` (string, optional) - date (dd/mm/yyyy): forces the date of the invoice. (default: today). Is only taken into account when there's a force_set_number provided and no date

+ Response 200 (application/json)

    + Attributes (object)
        + id: `1` (number) - ID of the invoice that was added

### /addCreditnote.php [POST /addCreditnote.php]

Adding a creditnote

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (number, required) - ID of the invoice related to this credit note. It must be a booked invoice.
        + contact_or_company: `company` (enum[string], optional) - When there's no invoice_id provided, you need to provide contact_or_company, contact_or_company, sys_department_id, force_set_number and (if you already have invoices) force_set_date 
            + Members
                + company
                + contact
        + contact_or_company_id: `1` (number, optional) - ID of the related contact or company
        + sys_department_id: `2` (number, optional) -  ID of the department the creditnote will be added to
        + description_1: `An awesome product` (string, required) - At least one creditnote line needs to be provided
        + price_1: `100` (number, required)
        + amount_1: `3` (number, required) 
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Subtitle` (string, optional)
        + force_set_number: `20170001` (number, optional) - force creditnote number to the given integer.
        + force_set_date: `21/06/2017` (string, optional) - date (dd/mm/yyyy): forces the date of the creditnote. (default: today). Is only taken into account when there's a force_set_number provided

+ Response 200 (application/json)

    + Attributes (object)
        + id: `1` (number) - ID of the creditnote that was added

### /setInvoicePaymentStatus.php [POST /setInvoicePaymentStatus.php]

Mark an invoice as paid or not paid

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (number, required) - ID of the invoice. The invoice needs to be booked in order to mark it as paid.
        + status: `paid` (enum[string], required) - It's not possible to mark a paid invoice as paid, or unpaid invoice as unpaid.
            + Members
                + paid
                + not_paid

+ Response 200 (application/json)

    + Attributes (object)
        + status: `success` (string) - Indicating success or failure of the operation.

### /updateInvoice.php [POST /updateInvoice.php]

Update an invoice. The invoice lines you provide will be the new invoice lines of the invoice. The old invoice lines will be removed. All changes made via the API to invoices will be registered in the tracking section of the invoice.

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (number, required) - ID of the invoice
        + description_1: `An awesome product` (string, required) - At least one invoice line needs to be provided
        + price_1: `100` (number, required)
        + amount_1: `3` (number, required) 
        + vat_1: `21` (enum[string], required) - The vat tariff for this line
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_id_1: `1` (number, optional) - ID of the product
        + account_1: `1` (number, optional) - ID of the bookkeeping account
        + subtitle_1: `Subtitle` (string, optional)

+ Response 200 (application/json)

    + Attributes (object)
        + status: `OK` (string) - Indicating success or failure of the operation.

### /updateInvoiceComments.php [POST /updateInvoiceComments.php]

Update the comments on an invoice

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (number, required) - ID of the invoice
        + comments: `Comments on the invoice` (string, required)

+ Response 200 (application/json)

    + Attributes (object)
        + status: `success` (string) - Indicating success or failure of the operation.

### /deleteInvoice.php [POST /deleteInvoice.php]

Delete an invoice. It's not possible to delete invoices which are exported to a bookkeeping tool. It's only possible to delete an invoice if this doesn't cause a gap in numbering and if there are no creditnotes for this invoice.

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (number, required) - ID of the invoice

+ Response 200 (application/json)

    + Attributes (object)
        + status: `success` (string) - Indicating success or failure of the operation.

### /getInvoices.php [POST /getInvoices.php]

Search invoices

+ Request (application/json)

    + Attributes (object)
        + date_from: `01/01/2017` (string, required) - Format: dd/mm/yyyy
        + date_to: `31/12/2017` (string, required) - Format: dd/mm/yyyy
        + contact_or_company: `contact` (enum[string], optional) - Use this to filter by client
            + Members
                + contact
                + company
        + contact_or_company_id: `1` (number, optional) - ID of the contact or company
        + deep_search: `1` (number, optional) Pass 1 to return not just invoices related to the requested contact, but also to invoices related to linked companies
        + selected_customfields: `1,2` (string, optional) - comma-separated list of the IDs of the custom fields you wish to select (max 10).

+ Response 200 (application/json)

    + Attributes (array[Invoice])

### /getCreditnotes.php [POST /getCreditnotes.php]

Search creditnotes

+ Request (application/json)

    + Attributes (object)
        + `date_from`: `01/01/2017` (string, required) - Format: dd/mm/yyyy
        + `date_to`: `31/12/2017` (string, required) - Format: dd/mm/yyyy
        + contact_or_company: `contact` (enum[string], optional) - Use this to filter by client
            + Members
                + contact
                + company
        + contact_or_company_id: `1` (number, optional) - ID of the contact or company
        + deep_search: `1` (number, optional) Pass 1 to return not just invoices related to the requested contact, but also to invoices related to linked companies

+ Response 200 (application/json)

    + Attributes (array[Creditnote])

### /getInvoicesByProject.php [POST /getInvoicesByProject.php]

Search invoices

+ Request (application/json)

    + Attributes (object)
        + project_id: `1` (number, required) - ID of the project
        + include_draft_invoices: `1` (number, optional) -  set this parameter to 1 to include draft invoices
            + Default: `0`

+ Response 200 (application/json)

    + Attributes (array[Invoice])

### /getCreditnotesByProject.php [POST /getCreditnotesByProject.php]

Search creditnotes

+ Request (application/json)

    + Attributes (object)
        + project_id: `1` (number, required) - ID of the project
        + include_draft_invoices: `1` (number, optional) -  set this parameter to 1 to include draft invoices
            + Default: `0`

+ Response 200 (application/json)

    + Attributes (array[Creditnote])

### /sendInvoice.php [POST /sendInvoice.php]

Send booked invoices via email. A maximum of 10 attachments can be provided.

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (number, required) - ID of the invoice or credit note you want to render to PDF
        + email_to: `info@teamleader.eu,support@teamleader.eu` (string, required) - Use a comma separated list to send the email to a maximum of 5 addresses.
        + email_subject: `Reminder to pay invoice` (string, required)
        + email_text: `Please pay your invoice` (string, required)
        + attachment_filename_1: `attachment1.pdf` (string, optional) - filename for the attachment
        + attachment_base64_content_1: `asdfsdfsdf...` (string, optional) - Base64 encoded file contents

+ Response 200 (application/json)

    + Attributes (object)
        + status: `success` (string) - Indicating success or failure of the operation.

### /getInvoiceReminderTemplates.php [POST /getInvoiceReminderTemplates.php]

Get the id and name of available email reminder templates for an invoice

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (number, required) - ID of the invoice or credit note you want to view available reminders for

+ Response 200 (application/json)

    + Attributes (object)
        + status: `success` (string) - Indicating success or failure of the operation.
        + data (array[object])
            + (object)
                + id: `1` (number)
                + name: `template1` (string)

### /getInvoiceReminderTemplateContent.php [POST /getInvoiceReminderTemplateContent.php]

Renders a certain reminder template for a given invoice. You can use this to send a reminder to your customer with the sendInvoice endpoint, as this endpoint does not send any reminders itself.

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (number, required) - ID of the invoice or credit note you want to view available reminders for
        + template_id: `1` (number, required) - ID of the template you want to render

+ Response 200 (application/json)

    + Attributes (object)
        + status: `success` (string) - Indicating success or failure of the operation.
        + data (object)
            + subject: `Reminder to pay invoice 20170001` (string)
            + text: `Please pay invoice 20170001` (string)

### /getInvoiceCloudURL.php [POST /getInvoiceCloudURL.php]

Generates the invoicecloud URL for an invoice

+ Request (application/json)

    + Attributes (object)
        + invoice_id: `1` (number, required) - ID of the invoice

+ Response 200 (application/json)

    + Attributes (object)
        + invoice_nr: `2017 / 8` (string)
        + invoicecloud_secret_url: `http://dev.invoicecloud.be/?invoice_id=1&gid=1&token=Gg8oUwLf9EmzS7Wxkr0L2fT6kgcBuXO04NeO9QT9l5y43lseCiPvnzryFuZ0` (string)
        + invoicecloud_secret: `Gg8oUwLf9EmzS7Wxkr0L2fT6kgcBuXO04NeO9QT9l5y43lseCiPvnzryFuZ0` (string)

### /getBookkeepingAccounts.php [POST /getBookkeepingAccounts.php]

Get more information about the bookkeeping accounts

+ Request (application/json)

    + Attributes (object)
        + sys_department_id: `1` (number, required) - ID of the department 

+ Response 200 (application/json)

    + Attributes (array[object])
        + (object)
            + id: `1` (number)
            + account: `70000` (number)
            + name_nl: `general account` (string)
            + name_fr: `account general` (string)

## Files [/files]

### /getFiles.php [GET /getFiles.php]

Get a list of all files relating to an object

+ Request (application/json)

    + Attributes (object)
        + amount: `20` (number, required) - The amount of contacts returned per request, max 1 to 100
        + pageno: `0` (number, required) - The current page, the first page is 0
        + object_type: `contact` (enum[string], required) - The type of object
            + Members
                + contact
                + company
                + sale
                + ticket
                + project
                + meeting
        + object_id: `1` (number, required) - ID of the object
        + folder_name: `cat_pictures` (string, optional) - the folder name of which the contents should be displayed

+ Response 200 (application/json)

        {
            "status": "success",
            "reason": "",
            "data": [
                {
                    "id": 101942,
                    "filename": "avatar.jpg",
                    "date_last_edited": 1492673227,
                    "filesize_bytes": 58493
                }
            ]
        }

### /getFileInfo.php [GET /getFileInfo.php]

Get a info about a specific file

+ Request (application/json)

    + Attributes (object)
        + file_id: `20` (number, required) - The file's ID

+ Response 200 (application/json)

        {
            "filename": "avatar.jpg",
            "filesize_bytes": 58493,
            "uploader_client_id": 40,
            "related_object_type": "contact",
            "related_object_id": 1178028,
            "folder": "Business cards",
            "date_last_edited": 1492673227,
            "date_last_edited_formatted": "20/04/2017"
        }

### /downloadFile.php [GET /downloadFile.php]

Get a signed URL where the file can be downloaded. The signed URL will remaing valid for 30 seconds.

+ Request (application/json)

    + Attributes (object)
        + file_id: `20` (number, required) - The file's ID

+ Response 200 (application/json)

        {
            "status": "success",
            "reason": "",
            "data": {
                "signed_download_url": "https://test-teamleader.s3-eu-west-1.amazonaws.com/TL_uploaded_files/5/contact/1178028/101942_40_1492673227_NX3FH?response-cache-control=maxage%3D1&response-content-disposition=attachment%3B%20%20filename%2A%3DUTF-8%27%27avatar.jpg&AWSAccessKeyId=AKIAJW7R5Z6B2I3N4RPA&Expires=1492677109&Signature=K5aSuyWOIZ26sVeGx%2BizY1MOUTo%3D"
            }
        }

### /uploadFile.php [GET /uploadFile.php]

Get a signed URL where the file can be downloaded. The signed URL will remaing valid for 30 seconds.

+ Request (application/json)

    + Attributes (object)
        + object_type: `contact` (enum[string], required) - The type of object
            + Members
                + contact
                + company
                + sale
                + ticket
                + project
                + meeting
        + object_id: `1` (number, required) - ID of the object
        + file_content: `TG9yZW0gSXBzdW0gaXMgc2ltcGx5IGR1bW15IHRleHQgb2YgdGhlIHByaW50aW5nIGFuZCB0eXBlc2V0dGluZyBpbmR1c3RyeS4=` (string, required) - Base64 encoded version the file
        + file_name: `cat.bmp` (string, required) - Name of the file, including extension
        + folder_name: `cat_pictures` (string, optional) - the folder name of which the contents should be displayed

+ Response 200 (application/json)

        {
            "status": "success",
            "reason": "",
            "data": "123"
        }

### /deleteFile.php [GET /deleteFile.php]

Delete a file

+ Request (application/json)

    + Attributes (object)
        + file_id: `20` (number, required) - The file's ID

+ Response 200 (application/json)

        {
            "status": "success"
        }

## Subscriptions [/subscriptions]

### /addSubscription.php [POST /addSubscription.php]

Add subscription

+ Request (application/json)

    Item lines can be added by giving the item line ID as suffix. eg description_1 will contain the description for Item line 1, description_2 will contain the description for item line 2, ...

    + Attributes(object)
        + contact_or_company: `contact` (enum[string], required) - Who is the subscription for?
            + Members
                + contact
                + company
        + contact_or_company_id: `1` (number, required) - ID of the contact or company
        + sys_department_id: `1` (number, required) - ID of the department the invoice will be added to
        + date_start: `01/08/1987` (string, required) - Date the first invoice should be created. The date should be in the format dd/mm/yyyy
        + repeat_after: `monthly` (enum[string], required) - Repeat cycle 
            + Members
                + monthly
                + quarterly
                + yearly
                + sixmonthly
                + twomonthly
                + twoyearly
                + 3yearly
                + 4yearly
                + 5yearly
                + twoweekly
                + 6yearly
                + 7yearly
                + 8yearly
                + 9yearly
                + 10yearly
                + fourmonthly
        + title: `Monthly subscription Teamleader` (string, required) - eg: Hosting, Domain names,...
        + date_end: `01/08/1987` (string, optional) - Date this subscription should expire. Date should be in the format dd/mm/yyyy
        + related_deal_id: `1` (number, optional) - ID of the deal this subscription is related to
        + permanent_invoicing: `0` (enum[number], optional) - Default 1.
            + Members
                + 0 - Do not automatically book subscription.
                + 1 - Automatically book subscription.
        + autosend_invoice: `0` (enum[number], optional) - Automatically send subscription invoice
            + Members
                + 0 - Do not send subcription invoice automatically.
                + 1 - Sends subscription invoice automatically.
        + autosend_bpost: `0` (enum[number], optional) - Automatically send subscription invoice through phsyical mail.
            + Members
                + 0 - Do not send subscription invoice through physical mail
                + 1 - Send subscription invoice through physical mail automatically.
        + comments: `Comment` (string, optional) - Comments
        + days_in_advance: `1` (number, optional) - Sending of the invoice. Set to 0 to send out the invoice on the day it's due. Defaults to 7 days
        + payment_term: `0D` (enum[string], optional) - Default: 30D
            + Members
                + 0D
                + 7D
                + 10D
                + 15D
                + 21D
                + 30D
                + 45D
                + 60D
                + 30DEM
                + 60DEM
                + 90DEM
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)
        + description_ID: `Item description` (string, optional) - Description of item line ID
        + price_ID: `12.34` (number, optional) - Item line ID price
        + amount_ID: `100` (number, optional) - Item line ID amount
        + vat_ID: `00` (enum[string], optional) - The vat tariff for item line ID
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + product_ID_1: `1` (number, optional) - Id of the product for item line ID
        + account_ID: `1` (number, optional) - Id of the bookkeeping account for item line ID
        + subtitle_ID: `Sub sub title` (string, optional) - Subtitle for item line ID

+ Response 200 (application/json)
    + Attributes (object)
        + id: `416654` (number) - ID of the subscription that was added

### /updateSubscription.php [POST /updateSubscription.php]

    Update subscription

+ Request (application/json)

    + Attributes
        + subscription_id: `1` (number, required) - ID of the subscription
        + date_start: `01/08/1987` (string, optional) - Date the first invoice should be created. The date should be in the format dd/mm/yyyy.
        + repeat_after: `monthly` (enum[string], optional) -  Invoice repeat cycle
            + Members
                + monthly
                + quarterly
                + yearly
                + sixmonthly
                + twomonthly
                + twoyearly
                + 3yearly
                + 4yearly
                + 5yearly
                + twoweekly
                + 6yearly
                + 7yearly
                + 8yearly
                + 9yearly
                + 10yearly
                + fourmonthly
        + custom_field_ID: `bar` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)

+ Response 200 (application/json)
    + Attributes (object)
        + status: `success` (string)

### /deleteSubscription.php [POST /deleteSubscription.php]

    Delete subscription

+ Request (application/json)

    + Attributes
        + subscription_id: `1` (number, required) - ID of the subscription

+ Response 200 (application/json)
    + Attributes (object)
        + status: `success` (string)

### /getSubscription.php [POST /getSubscription.php]

    Find single subscription

+ Request (application/json)

    + Attributes
        + subscription_id: `1` (number, required) - ID of the subscription

+ Response 200 (application/json)

    + Attributes
        + id: `1` (number) - ID of the subscription
        + active: `0` (enum[number]) - Subscription status.
            + members
                + 0
                + 1
        + title: `Subscription title` (string) - Title
        + repeat: `monthly` (enum[string], required) - Invoice repeat cycle 
            + Members
                + monthly
                + quarterly
                + yearly
                + sixmonthly
                + twomonthly
                + twoyearly
                + 3yearly
                + 4yearly
                + 5yearly
                + twoweekly
                + 6yearly
                + 7yearly
                + 8yearly
                + 9yearly
                + 10yearly
                + fourmonthly
        + department_id: `1` (number) - ID of the department
        + date_start: `554774400` (number) - Start date of subscription as unix timestamp
        + date_start_formatted: `01/08/1987` (string) - Start date of subscritpion in formatted string mm/dd/yyyy.
        + date_end: `554774400` (number) -  End date of subscription as unix timestamp
        + date_end_formatted: `01/08/1987` (string) - End date of subscritpion in formatted string mm/dd/yyyy.
        + total_price_excl_vat: `12.34` (number) - Price excl VAT
        + total_price_incl_vat: `12.34` (number) - Price incl VAT
        + next_renewal_date: `554774400` (number) - Next renewal date of subscription as unix timestamp
        + next_renewal_date_formatted: `01/08/1987` - (string) Next renewal date of subscritpion in formatted string mm/dd/yyyy.
        + items (array) - Item line
            + (object)
                + text: `title` (string) - Title
                + amount: `1` (number) - Item amount
                + line_total_incl_vat `12.34` (number) - Line incl VAT
                + line_total_excl_vat `12.34` (number) - Line excl VAT
                + vat_rate `21` (number) - VAT rate
                + account `1` (number) - Account ID
                + subtitle `Line subtitle` (string) - Subtitle for line
                + description `Line description` (string) - Description for line
        + for: `contact` (enum[string], required) - Who is the subscription for?
            + Members
                + contact
                + company
        + for_id: `1` (number) - ID of the related contact or company
        + custom_fields: 1, 2, 3 (array[number]) - Array containing the id's of the custom fields and their values


### /getSubscriptions.php [POST /getSubscriptions.php]

    Search subscriptions

+ Request (application/json)

    + Attributes(object)
        + amount: `50` (number, required) - The amount of subscriptions returned per request (between 1 and 100)
        + pageno: `0` (number, required) - The page number (the first page is 0)
        + selected_customfields: 14,15 (array[number]) - Comma-separated list of the IDs of the custom fields you wish to select (max 10)
        + searchby: `teamleader` (string) - We'll try to match each part of the string to the subscription title and content

+ Response 200 (application/json)

    + Attributes (array)
        + (object)
            + id: `48100` (number) - The id of the subscription
            + active: `1` (enum[number]) - Boolean indicating if the invoice is active
                + Members
                    + 1
                    + 0
            + repeat: `quarterly` (enum[string])
                + Members
                    + monthly
                    + quarterly
                    + yearly
                    + sixmonthly
                    + twomonthly
                    + twoyearly
                    + 3yearly
                    + 4yearly
                    + 5yearly
                    + twoweekly
                    + 6yearly
                    + 7yearly
                    + 8yearly
                    + 9yearly
                    + 10yearly
                    + fourmonthly
            + client_name: `Erlich Bachman` (string) - Name of the client
            + department_name: `Finance` (string) - Department for which the subscription is created
            + department_id: `2` (number) - Id of the department
            + date_start: `1480287600` (number) - Unix timestamp of the start date of the subscription
            + date_start_formatted: `28/11/2016` (string) - Formatted start date of the subscription
            + date_end `1480287600` (number, nullable) - Unix timestamp of the end date of the subscription (can be empty)
            + date_end_formatted `28/11/2016` (string, nullable) - Formatted end date of the subscription
            + total_price_excl_vat: `100.00` (number) - Price, excluding VAT
            + total_price_incl_vat: `106.00` (number) - Price, including VAT
            + next_renewal_date: `1488236400` (number) - Unix timestamp of the next renewal date
            + next_renewal_date_formatted: `28/02/2017` (string) - Formatted next renewal date
            + contact_or_company: `contact` (enum[string]) - Indicates the subscription is linked to a contact or a company
                + Members
                    + contact
                    + company
            + contact_or_company_id: `1174438` (number) - The id of the contact or company
            

### /getInvoicesBySubscription.php [POST /getInvoicesBySubscription.php]

    Fetching the IDs of all invoices created by a subscription

+ Request (application/json)

    + Attributes(object)
        + subscription_id: `1245` (number, required) - The id of the subscription

+ Response 200 (application/json)

    + Attributes(object)
        + generated_invoice_ids: 11400, 11401 (array[number])

### /getRelatedSubscriptionsByInvoice.php [POST /getRelatedSubscriptionsByInvoice.php]

    Fetching the IDs of all subscriptions related to an invoice

+ Request (application/json)

    + Attributes(object)
        + invoice_id: `1471` (number, required) - The id of the invoice

+ Response 200 (application/json)

    + Attributes(array)
        + (object)
            + subscription_id: `7457` (number)
            + subscription_title: `Monthly subscription Teamleader` (string)

### /getSubscriptionsByDeal.php [POST /getSubscriptionsByDeal.php]

    Fetching the IDs of all subscriptions related to a deal

+ Request (application/json)

    + Attributes(object)
        + deal_id: `1337` (number, required) - The id of the deal

+ Response 200 (application/json)

    + Attributes(object)
        + related_subscription_ids: 1245, 2584 (array[number])

### /getSubscriptionsByContactOrCompany.php [POST /getSubscriptionsByContactOrCompany.php]

    Fetching all subscripions related to a contact or company

+ Request (application/json)

    + Attributes(object)
        + contact_or_company: `contact` (enum[string], required) - State 'what' you are searching for, a contact or a company
            + Members
                + contact
                + company
        + contact_or_company_id: `1234` (number, required) - The id of the contact or the company 

+ Response 200 (application/json)

    + Attributes(array)
        + (object)
            + id: `1247` (number)

## Products [/products]

### /addProduct.php [POST /addProduct.php]

Add product

+ Request (application/json)

    + Attributes (object)
        + name: `Teamleader Monthly Subscription` (string, required) - The name of the product
        + price: `12.34` (number, required) - The price of the new product
        + stock_amount: `100` (number, optional) - The new value for stock
        + external_id: `1234A` (string, optional) - External ID code
        + vat: `00` (enum[string]), optional) - The VAT tariff for the new product
            + Members
                + 00
                + 06
                + 12
                + 21
                + CM
                + EX
                + MC
                + VCMD
        + account_id: `1234` (number, optional) - The ID of the bookkeeping account
        + automerge_by_name: `0` (enum[number]) - If this flag is set to 1, Teamleader will merge this info into an existing product with the same name, if it finds any.
            + Members
                + 0
                + 1
        + purchase_price: `12.34` (number, optional) - The purchase price of the product
        + custom_field_ID: `any` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)


+ Response 200 (application/json)
    + Attributes (object)
        + id: `416654` (number) - ID of the product that was added

### /updateProduct.php [POST /updateProduct.php]

Update product

+ Request (application/json)

    + Attributes (object)
        + product_id: `1234` (number, required) - Id of the product
        + name: `Teamleader Monthly Subscription` (string, optional) - The name of the product
        + price: `12.34` (number, optional) - The price of the new product
        + external_id: `1234A` (string, optional) - External ID code
        + stock_amount: `100` (number, optional) - The new value for stock
        + purchase_price: `12.34` (number, optional) - The purchase price of the product
        + custom_field_ID: `any` (string, optional) - Replace ID by the ID of your custom field. (eg custom_field_310)


+ Response 200 (application/json)
    + Attributes (object)
        + status: `success` (string) - Indicating success or failure of the update operation.


### /deleteProduct.php [POST /deleteProduct.php]

Delete product

+ Request (application/json)

    + Attributes (object)
        + product_id: `1234` (number, required) - Id of the product


+ Response 200 (application/json)
    + Attributes (object)
        + status: `success` (string) - Indicating success or failure of the update operation.

### /getProducts.php [POST /getProducts.php]

Search all products

+ Request (application/json)

    + Attributes
        + amount: `10` (number, required) - The amount of products returned per request
        + pageno: `2` (number, required) - The pag number (the first page is 0)
        + searchBy: `scissor` (string, optional) - The search string. Teamleader will try to match each part of the string to the name or external ID of the product
        + modifiedsince: `1498056035` (number, optional) - Unix timestamp. Teamleader will only return products that have been added or modified since that timestamp

+ Response 200 (application/json)
    
    Prices will be returned as `price_value_<index_of_price>`, they are suffixed with the price index. 
    For example, first price returned will be `price_value_1` and the second will be `price_value_2`.

    + Attributes (array)
        + (object)
            + id: `203052` (number)
            + external_id: `ext_id_827` (string)
            + name: `Nice product` (string)
            + vat: `19` (string)
            + booking_account: `700` (number)
            + booking_account_id: `10` (number)
            + price_value_1: `30.0000` (number)

### /getProduct.php [POST /getProduct.php]

Get product details

+ Request (application/json)

    + Attributes
        + product_id: `20` (number, required) - The id of the product
        + include_all_custom_fields: `1` (number, optional) - If this flag is set to 1, all custom fields will be fetched 
        + include_photos: `1` (number, optional) - If this flag is set to 1, the product image url will be fetched

+ Response 200 (application/json)

    Custom fields will be returned as on object with the custom field id as a key and the custom field value as the value.
    
    + Attributes (Product)

## Notes [/notes]

### /addNote.php [POST /addNote.php]

Add a note to an object

+ Request (application/json)

    + Attributes (object)
        + object_type: `contact` (enum[string], required) - The type of object
            + Members
                + contact
                + company
                + sale
                + project
                + meeting
        + object_id: `1` (number, required) - ID of the object
        + note_title: `Phone call` (string, required) - A short title for the note (max. 100 characters)
        + note_extra_information: `A longer text that can contain plaintext or HTML` (string, optional)
        + note_extra_information_type: `HTML` (enum[string], optional) - The type of extra information
            + Members
                + plaintext
                + HTML
        + disable_modification: `1` (enum[number], optional) - Can be used to disable editing/deleting this note
            + Members
                + 0
                + 1
        + date: `1` (number, optional) - Unix timestamp: add a custom timestamp

+ Response 200 (application/json)

        {
            "status": "OK"
        }

### /getNotes.php [POST /getNotes.php]

Get a list of notes for an object

+ Request (application/json)

    + Attributes (object)
        + object_type: `contact` (enum[string], required) - The type of object
            + Members
                + contact
                + company
                + sale
                + project
                + meeting
        + object_id: `1` (number, required) - ID of the object
        + pageno: `0` (number, required) - The current page, the first page is 0

+ Response 200 (application/json)

    + Attributes (array[Note])

## Meetings [/meetings]

### /deleteMeeting.php [POST /deleteMeeting.php]

Delete a meeting from Teamleader

+ Request (application/json)

    + Attributes (object)
        + meeting_id: `1` (number, required) - The ID of the meeting you wish to delete

+ Response 204

# Data Structures

## Contact (object)

+ id: 456 (number)
+ forename: Erlich (string)
+ surname: Bachman (string)
+ street: Newell Road (string)
+ number: 5230 (string)
+ zipcode: 94020 (string)
+ city: Palo Alto (string)
+ country: US (string)
+ website: https://piedpiper.com (string)
+ email: info@piedpiper.eu (string)
+ gsm (string)
+ telephone: 09 298 06 15 (string)
+ fax (string)
+ gender: M (enum[string])
    + Members
        + M
        + F
        + U
+ birthdate: 1491480887 (number)
+ iban (string)
+ bic (string)
+ tags: [tag1,tag2] (array[string])
+ language_code: EN (string)
+ date_added: 1491480887 (number)
+ extra_addresses (array[string])
+ deleted: 0 (number)
+ custom_fields (object)
+ linked_company_ids (string)
+ linked_company_names (array[string])
+ linked_company_functions (string)
+ background_info_html (string)
+ external_customer_id (string)

## Company (object)

+ id: 123 (number)
+ name: Pied Piper (string)
+ street: Newell Road (string)
+ number: 5230 (string)
+ zipcode: 94020 (string)
+ city: Palo Alto (string)
+ country: US (string)
+ taxcode: BE 0899.623.035 (string)
+ kvk_nummer (string)
+ local_business_number (string)
+ email: info@piedpiper.eu (string)
+ website: https://piedpiper.com (string)
+ telephone: 09 298 06 15 (string)
+ fax (string)
+ iban (string)
+ bic (string)
+ pricelist_id: 9 (number)
+ account_manager_id (number)
+ date_added: 1456388372 (number)
+ tags: [tag1,tag2] (array[string])
+ language_code: NL (string)
+ business_type: NV (string)
+ vat_liability: vat_liable (string)
+ sector_name (string)
+ invoice_email_address (string)
+ payment_term (string)
+ extra_addresses (array[string])
+ background_info_html (string)
+ related_companies (string)
+ deleted: 0 (number)
+ custom_fields (object)
+ external_customer_id (string)

## Invoice (object)
+ id: 173111 (number)
+ invoice_nr: 5 (number)
+ invoice_nr_detailed: `2017 / 5 (MAIN)` (string)
+ date: 1491343199 (number)
+ date_formatted: "04/04/2017" (string)
+ due_date: 1493157599 (number)
+ due_date_formatted: "25/04/2017" (string)
+ date_paid: `-1` (number)
+ paid: 0 (number)
+ total_price_excl_vat: "123.00" (string)
+ total_price_incl_vat: "130.38" (string)
+ name: "De Rode Duivles" (string)
+ for_attention_of: "Radja Nainggolan" (string)
+ incasso_recall_costs: "0.00" (string)
+ incasso_interest_amount: "0.00" (string)
+ structured_communication: "+++000/1731/11048+++" (string)
+ contact_or_company: "company" (string)
+ contact_or_company_id: 485906 (number)

## Creditnote (object)
+ id: 173111 (number)
+ creditnote_nr: 5 (number)
+ creditnote_nr_detailed: `2017 / 5 (MAIN)` (string)
+ date: 1491343199 (number)
+ date_formatted: "04/04/2017" (string)
+ date_paid: `-1` (number)
+ paid: 0 (number)
+ total_price_excl_vat: "123.00" (string)
+ total_price_incl_vat: "130.38" (string)
+ name: "De Rode Duivles" (string)
+ contact_or_company: "company" (string)
+ contact_or_company_id: 485906 (number)
+ related_invoice_id: 173111 (number)

## Deal (object)
+ id: 164938 (number)
+ title: `Interesting deal` (string)
+ for: contact (string)
+ for_id: 1176793 (number)
+ customer_name: `John`,
+ quotation_nr: 21 (number)
+ total_price_excl_vat: `0.00` (string)
+ probability: 5 (number)
+ phase_id: 5 (number)
+ responsible_user_id: `-1` (number)
+ entry_date: 1487250618 (number)
+ entry_date_formatted: 16/02/2017 (string)
+ latest_activity_date: 1487250618 (number)
+ latest_activity_date_formatted: 16/02/2017 (string)
+ close_date: 1487250618 (number)
+ close_date_formatted: 16/02/2017 (string)
+ date_lost: 1487250618 (number)
+ date_lost_formatted: 16/02/2017 (string)
+ reason_refused: `No interest` (string)
+ source_id: `8799` (number)

## Product (object)
+ id: 202188 (number)
+ name: Nice product (string)
+ external_id: 23 (string)
+ vat: 19 (string)
+ inv_account_id: 1097 (number)
+ description: A nice product description (string)
+ stock: 30 (number)
+ min_stock: 10 (number)
+ date_edited: 1472645009 (number)
+ prices (array)
    + (object)
        + name: Price Foo (string)
        + price_excl_vat: 20.000 (number)
        + price_incl_vat: 23.8 (number)
+ custom_fields (object)
+ suppliers (array) - A supplier
    + (object)
        + type: company (string)
        + id : 37625 (number)
        + name: Products and Services Inc. (string)
        + purchase_price: 10.0000 (number)
        + is_main_supplier: 1 (string)
        + supplier_product_code: PRODUCTCODE1 (string)

## Note (object)
+ date: 1487250618 (number) - UNIX timestamp
+ short_description: `The short description` (string)
+ long_description: `The long description` (string)
+ type: `note` (enum[string])
    + Members
        + contact
        + company
        + sale
        + project
        + meeting
+ custom_type: `-1` (number)
